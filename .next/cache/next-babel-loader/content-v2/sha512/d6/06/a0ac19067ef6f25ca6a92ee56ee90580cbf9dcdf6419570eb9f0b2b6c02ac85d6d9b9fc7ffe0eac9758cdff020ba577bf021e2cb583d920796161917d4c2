{"ast":null,"code":"import _regeneratorRuntime from \"D:/CY-Company/FileProject/NextJS_Project/NextJS-3/nextjss/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getCategories),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(CategoriesSaga);\n\nimport { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport Request from \"../utils/request\";\nimport { getListCategoriesSuccess, getListCategoriesError, getListCategories } from \"../actions/categories\";\nimport { GET_LIST_CATEGORIES } from \"../contans/categories\";\nexport function getCategories(action) {\n  var url, response;\n  return _regeneratorRuntime.wrap(function getCategories$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"categories/get?id_website=4&active=1\";\n          _context.prev = 1;\n          _context.next = 4;\n          return call(Request, url);\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return put(getListCategoriesSuccess(response));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 13;\n          return put(getListCategoriesError(_context.t0.message));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 9]]);\n}\nexport default function CategoriesSaga() {\n  return _regeneratorRuntime.wrap(function CategoriesSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.t0 = all;\n          _context2.next = 3;\n          return takeLatest(GET_LIST_CATEGORIES, getListCategories);\n\n        case 3:\n          _context2.t1 = _context2.sent;\n          _context2.t2 = [_context2.t1];\n          _context2.next = 7;\n          return (0, _context2.t0)(_context2.t2);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n_c = CategoriesSaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesSaga\");","map":{"version":3,"sources":["D:/CY-Company/FileProject/NextJS_Project/NextJS-3/nextjss/src/sagas/categories.js"],"names":["getCategories","CategoriesSaga","put","takeLatest","all","call","Request","getListCategoriesSuccess","getListCategoriesError","getListCategories","GET_LIST_CATEGORIES","action","url","response","message"],"mappings":";;oDAQiBA,a;qDAUQC,c;;AAlBzB,SAASC,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SAAQC,wBAAR,EAAkCC,sBAAlC,EAA0DC,iBAA1D,QAAkF,uBAAlF;AAEA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,OAAO,SAAUV,aAAV,CAAwBW,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,UAAAA,GADH;AAAA;AAAA;AAGkB,iBAAMP,IAAI,CAACC,OAAD,EAAUM,GAAV,CAAV;;AAHlB;AAGOC,UAAAA,QAHP;AAAA;AAIC,iBAAMX,GAAG,CAACK,wBAAwB,CAACM,QAAD,CAAzB,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMX,GAAG,CAACM,sBAAsB,CAAC,YAAMM,OAAP,CAAvB,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,eAAe,SAAUb,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA,yBACLG,GADK;AAAA;AAEP,iBAAMD,UAAU,CAACO,mBAAD,EAAsBD,iBAAtB,CAAhB;;AAFO;AAAA;AAAA;AAAA;AACX;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;KAAUR,c","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\r\n\r\nimport Request from \"../utils/request\";\r\n\r\nimport {getListCategoriesSuccess, getListCategoriesError, getListCategories} from \"../actions/categories\";\r\n\r\nimport { GET_LIST_CATEGORIES } from \"../contans/categories\";\r\n\r\nexport function* getCategories(action) {\r\n    const url = `categories/get?id_website=4&active=1`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getListCategoriesSuccess(response));\r\n    } catch (error) {\r\n        yield put(getListCategoriesError(error.message));\r\n    }\r\n}\r\n\r\nexport default function* CategoriesSaga() {\r\n    yield all([\r\n        yield takeLatest(GET_LIST_CATEGORIES, getListCategories),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}