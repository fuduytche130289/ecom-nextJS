{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as TYPE from \"../contans/categories\";\nconst initialState = {\n  loading: false,\n  data: [],\n  mess: null\n};\n\nconst categoriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TYPE.GET_LIST_CATEGORIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case TYPE.GET_LIST_CATEGORIES_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        data: action.data\n      });\n\n    case TYPE.GET_LIST_CATEGORIES_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        mess: action.mess\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default categoriesReducer;","map":{"version":3,"sources":["D:/CY-Company/FileProject/NextJS_Project/NextJS-3/nextjss/src/reducers/categories.js"],"names":["TYPE","initialState","loading","data","mess","categoriesReducer","state","action","type","GET_LIST_CATEGORIES","GET_LIST_CATEGORIES_SUCCESS","GET_LIST_CATEGORIES_ERROR"],"mappings":";;;;;;AAAA,OAAO,KAAKA,IAAZ,MAAsB,uBAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;;AAMA,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,IAAI,CAACS,mBAAV;AACI,6CACOH,KADP;AAEIJ,QAAAA,OAAO,EAAE;AAFb;;AAKJ,SAAKF,IAAI,CAACU,2BAAV;AACI,6CACOJ,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAHjB;;AAMJ,SAAKH,IAAI,CAACW,yBAAV;AACI,6CACOL,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIE,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAHjB;;AAMJ;AACI,aAAOE,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,eAAeD,iBAAf","sourcesContent":["import * as TYPE from \"../contans/categories\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    mess: null,\r\n};\r\n\r\nconst categoriesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TYPE.GET_LIST_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n\r\n        case TYPE.GET_LIST_CATEGORIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.data,\r\n            };\r\n\r\n        case TYPE.GET_LIST_CATEGORIES_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                mess: action.mess,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default categoriesReducer;\r\n"]},"metadata":{},"sourceType":"module"}